
@using System.Reflection;

 @helper InstructionsFor(string propertyName){
    
  

    if (string.IsNullOrEmpty(propertyName))
    {
        throw new ArgumentNullException("Property");
    }

    System.Reflection.PropertyInfo property = HtmlHelperExtensions.GetPropertyInfo(Html.ViewData.ModelMetadata.ModelType, propertyName);
    if (property == null)
    {
        throw new ArgumentException("Property does not exist on Model", propertyName);
    }

    Labores.Web.Attributes.InstructionsAttribute instructionAtt = property.GetCustomAttribute<Labores.Web.Attributes.InstructionsAttribute>();
    if (instructionAtt == null)
    {
        throw new ArgumentException("Instructions attribute does not exist on Model", propertyName);
    }

     string guid = Guid.NewGuid().ToString("N");
      string idInstructions=string.Format("instructions_{0}_{1}", propertyName, guid);
      string idClickable=string.Format("instructions_{0}_{1}_Click", propertyName, guid);
      
      
      
    <div id="@idInstructions" class="instructions">
        @instructionAtt.Instructions
     </div>
     <a id="@idClickable" href="">
         Instructions
     </a>
     <script>
         $(document).ready(function(){ 
             $( '#@idInstructions' ).dialog({autoOpen:false});
             $( '#@idClickable' ).click(function(ev) {
                 ev.preventDefault();
                 $( '#@idInstructions' ).dialog( 'open' );
             });
         });
     </script>
    }

